// Mocks generated by Mockito 5.4.6 from annotations
// in customizable_chart/test/integration_test_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i5;

import 'package:customizable_chart/l10n/global_app_localizations.dart' as _i14;
import 'package:customizable_chart/model/models/chart_data_model.dart' as _i4;
import 'package:customizable_chart/model/repositories/llm_repository.dart'
    as _i12;
import 'package:customizable_chart/model/services/client/client_http.dart'
    as _i7;
import 'package:customizable_chart/model/services/client/client_http_request.dart'
    as _i2;
import 'package:customizable_chart/model/services/client/failures/llm_failure.dart'
    as _i13;
import 'package:customizable_chart/model/services/environment.dart' as _i10;
import 'package:customizable_chart/model/services/fallback_api_service.dart'
    as _i11;
import 'package:customizable_chart/utils/secure_storage/secure_storage.dart'
    as _i9;
import 'package:customizable_chart/viewmodel/chart_viewmodel.dart' as _i15;
import 'package:customizable_chart/viewmodel/settings_viewmodel.dart' as _i16;
import 'package:dartz/dartz.dart' as _i3;
import 'package:flutter/material.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClientHttpRequest_0<T1> extends _i1.SmartFake
    implements _i2.ClientHttpRequest<T1> {
  _FakeClientHttpRequest_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChartDataModel_2 extends _i1.SmartFake
    implements _i4.ChartDataModel {
  _FakeChartDataModel_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocale_3 extends _i1.SmartFake implements _i5.Locale {
  _FakeLocale_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFocusNode_4 extends _i1.SmartFake implements _i6.FocusNode {
  _FakeFocusNode_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);

  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeTextEditingController_5 extends _i1.SmartFake
    implements _i6.TextEditingController {
  _FakeTextEditingController_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ClientHttp].
///
/// See the documentation for Mockito's code generation for more information.
class MockClientHttp extends _i1.Mock implements _i7.ClientHttp {
  MockClientHttp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.ClientHttpRequest<T>> post<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #headers: headers,
              },
            ),
            returnValue: _i8.Future<_i2.ClientHttpRequest<T>>.value(
              _FakeClientHttpRequest_0<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
            ),
          )
          as _i8.Future<_i2.ClientHttpRequest<T>>);

  @override
  _i8.Future<_i2.ClientHttpRequest<T>> get<T>(
    String? path, {
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {#queryParameters: queryParameters, #headers: headers},
            ),
            returnValue: _i8.Future<_i2.ClientHttpRequest<T>>.value(
              _FakeClientHttpRequest_0<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {#queryParameters: queryParameters, #headers: headers},
                ),
              ),
            ),
          )
          as _i8.Future<_i2.ClientHttpRequest<T>>);

  @override
  _i8.Future<_i2.ClientHttpRequest<T>> put<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #headers: headers,
              },
            ),
            returnValue: _i8.Future<_i2.ClientHttpRequest<T>>.value(
              _FakeClientHttpRequest_0<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
            ),
          )
          as _i8.Future<_i2.ClientHttpRequest<T>>);

  @override
  _i8.Future<_i2.ClientHttpRequest<T>> delete<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #headers: headers,
              },
            ),
            returnValue: _i8.Future<_i2.ClientHttpRequest<T>>.value(
              _FakeClientHttpRequest_0<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
            ),
          )
          as _i8.Future<_i2.ClientHttpRequest<T>>);

  @override
  _i8.Future<_i2.ClientHttpRequest<T>> patch<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #headers: headers,
              },
            ),
            returnValue: _i8.Future<_i2.ClientHttpRequest<T>>.value(
              _FakeClientHttpRequest_0<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
            ),
          )
          as _i8.Future<_i2.ClientHttpRequest<T>>);

  @override
  _i8.Future<_i2.ClientHttpRequest<T>> request<T>(
    String? path, {
    dynamic data,
    required String? method,
    Map<String, dynamic>? queryParameters,
    Map<String, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #request,
              [path],
              {
                #data: data,
                #method: method,
                #queryParameters: queryParameters,
                #headers: headers,
              },
            ),
            returnValue: _i8.Future<_i2.ClientHttpRequest<T>>.value(
              _FakeClientHttpRequest_0<T>(
                this,
                Invocation.method(
                  #request,
                  [path],
                  {
                    #data: data,
                    #method: method,
                    #queryParameters: queryParameters,
                    #headers: headers,
                  },
                ),
              ),
            ),
          )
          as _i8.Future<_i2.ClientHttpRequest<T>>);
}

/// A class which mocks [SecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorage extends _i1.Mock implements _i9.SecureStorage {
  MockSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> write({required String? key, required String? value}) =>
      (super.noSuchMethod(
            Invocation.method(#write, [], {#key: key, #value: value}),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<String?> read({required String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [], {#key: key}),
            returnValue: _i8.Future<String?>.value(),
          )
          as _i8.Future<String?>);

  @override
  _i8.Future<void> delete({required String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {#key: key}),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<bool> containsKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [key]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<void> eraseAll() =>
      (super.noSuchMethod(
            Invocation.method(#eraseAll, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);
}

/// A class which mocks [EnvironmentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnvironmentService extends _i1.Mock
    implements _i10.EnvironmentService {
  MockEnvironmentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String?> getAuthToken() =>
      (super.noSuchMethod(
            Invocation.method(#getAuthToken, []),
            returnValue: _i8.Future<String?>.value(),
          )
          as _i8.Future<String?>);

  @override
  _i8.Future<Map<String, dynamic>> getTokenUsageInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getTokenUsageInfo, []),
            returnValue: _i8.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i8.Future<Map<String, dynamic>>);
}

/// A class which mocks [FallbackApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFallbackApiService extends _i1.Mock
    implements _i11.FallbackApiService {
  MockFallbackApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<int> getCurrentUsageCount() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUsageCount, []),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<void> incrementUsageCount() =>
      (super.noSuchMethod(
            Invocation.method(#incrementUsageCount, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<bool> canUseFallbackApi() =>
      (super.noSuchMethod(
            Invocation.method(#canUseFallbackApi, []),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<int> getRemainingUsageCount() =>
      (super.noSuchMethod(
            Invocation.method(#getRemainingUsageCount, []),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<String?> getUserApiKey() =>
      (super.noSuchMethod(
            Invocation.method(#getUserApiKey, []),
            returnValue: _i8.Future<String?>.value(),
          )
          as _i8.Future<String?>);

  @override
  _i8.Future<void> resetUsageCount() =>
      (super.noSuchMethod(
            Invocation.method(#resetUsageCount, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);
}

/// A class which mocks [LlmRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLlmRepository extends _i1.Mock implements _i12.LlmRepository {
  MockLlmRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i3.Either<_i13.LlmFailure, Map<String, dynamic>>>
  processNaturalLanguagePrompt(String? userInput) =>
      (super.noSuchMethod(
            Invocation.method(#processNaturalLanguagePrompt, [userInput]),
            returnValue: _i8.Future<
              _i3.Either<_i13.LlmFailure, Map<String, dynamic>>
            >.value(
              _FakeEither_1<_i13.LlmFailure, Map<String, dynamic>>(
                this,
                Invocation.method(#processNaturalLanguagePrompt, [userInput]),
              ),
            ),
          )
          as _i8.Future<_i3.Either<_i13.LlmFailure, Map<String, dynamic>>>);

  @override
  _i4.ChartDataModel configToChartData(Map<String, dynamic>? config) =>
      (super.noSuchMethod(
            Invocation.method(#configToChartData, [config]),
            returnValue: _FakeChartDataModel_2(
              this,
              Invocation.method(#configToChartData, [config]),
            ),
          )
          as _i4.ChartDataModel);
}

/// A class which mocks [GlobalAppLocalizations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGlobalAppLocalizations extends _i1.Mock
    implements _i14.GlobalAppLocalizations {
  MockGlobalAppLocalizations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Locale get locale =>
      (super.noSuchMethod(
            Invocation.getter(#locale),
            returnValue: _FakeLocale_3(this, Invocation.getter(#locale)),
          )
          as _i5.Locale);

  @override
  void setAppLocalizations(dynamic localizations) => super.noSuchMethod(
    Invocation.method(#setAppLocalizations, [localizations]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ChartViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockChartViewModel extends _i1.Mock implements _i15.ChartViewModel {
  MockChartViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.FocusNode get promptFocusNode =>
      (super.noSuchMethod(
            Invocation.getter(#promptFocusNode),
            returnValue: _FakeFocusNode_4(
              this,
              Invocation.getter(#promptFocusNode),
            ),
          )
          as _i6.FocusNode);

  @override
  _i4.ChartDataModel get chartData =>
      (super.noSuchMethod(
            Invocation.getter(#chartData),
            returnValue: _FakeChartDataModel_2(
              this,
              Invocation.getter(#chartData),
            ),
          )
          as _i4.ChartDataModel);

  @override
  _i6.TextEditingController get promptController =>
      (super.noSuchMethod(
            Invocation.getter(#promptController),
            returnValue: _FakeTextEditingController_5(
              this,
              Invocation.getter(#promptController),
            ),
          )
          as _i6.TextEditingController);

  @override
  bool get isProcessing =>
      (super.noSuchMethod(Invocation.getter(#isProcessing), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void updateLineColor(_i5.Color? color) => super.noSuchMethod(
    Invocation.method(#updateLineColor, [color]),
    returnValueForMissingStub: null,
  );

  @override
  void updateGradientColors(_i5.Color? startColor, _i5.Color? endColor) =>
      super.noSuchMethod(
        Invocation.method(#updateGradientColors, [startColor, endColor]),
        returnValueForMissingStub: null,
      );

  @override
  void updateLineWidth(double? width) => super.noSuchMethod(
    Invocation.method(#updateLineWidth, [width]),
    returnValueForMissingStub: null,
  );

  @override
  void toggleGrid() => super.noSuchMethod(
    Invocation.method(#toggleGrid, []),
    returnValueForMissingStub: null,
  );

  @override
  void toggleTooltip() => super.noSuchMethod(
    Invocation.method(#toggleTooltip, []),
    returnValueForMissingStub: null,
  );

  @override
  void addRandomValue() => super.noSuchMethod(
    Invocation.method(#addRandomValue, []),
    returnValueForMissingStub: null,
  );

  @override
  void removeLastValue() => super.noSuchMethod(
    Invocation.method(#removeLastValue, []),
    returnValueForMissingStub: null,
  );

  @override
  void resetData() => super.noSuchMethod(
    Invocation.method(#resetData, []),
    returnValueForMissingStub: null,
  );

  @override
  void processSimulatedPrompt(String? prompt) => super.noSuchMethod(
    Invocation.method(#processSimulatedPrompt, [prompt]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void clearPromptResult() => super.noSuchMethod(
    Invocation.method(#clearPromptResult, []),
    returnValueForMissingStub: null,
  );

  @override
  void clearPromptController() => super.noSuchMethod(
    Invocation.method(#clearPromptController, []),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<bool> processTextPromptWithResult(
    String? prompt,
    String? errorMessage,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#processTextPromptWithResult, [
              prompt,
              errorMessage,
            ]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<bool> processNaturalLanguagePrompt(
    String? prompt,
    String? errorMessage,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#processNaturalLanguagePrompt, [
              prompt,
              errorMessage,
            ]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<void> processPrompt(String? errorMessage) =>
      (super.noSuchMethod(
            Invocation.method(#processPrompt, [errorMessage]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [SettingsViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsViewModel extends _i1.Mock implements _i16.SettingsViewModel {
  MockSettingsViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isObscured =>
      (super.noSuchMethod(Invocation.getter(#isObscured), returnValue: false)
          as bool);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasApiKey =>
      (super.noSuchMethod(Invocation.getter(#hasApiKey), returnValue: false)
          as bool);

  @override
  String get maskedKey =>
      (super.noSuchMethod(
            Invocation.getter(#maskedKey),
            returnValue: _i17.dummyValue<String>(
              this,
              Invocation.getter(#maskedKey),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i8.Future<void> loadApiKey() =>
      (super.noSuchMethod(
            Invocation.method(#loadApiKey, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> saveApiKey(String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#saveApiKey, [apiKey]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> removeApiKey() =>
      (super.noSuchMethod(
            Invocation.method(#removeApiKey, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  void editApiKey() => super.noSuchMethod(
    Invocation.method(#editApiKey, []),
    returnValueForMissingStub: null,
  );

  @override
  void toggleObscureText() => super.noSuchMethod(
    Invocation.method(#toggleObscureText, []),
    returnValueForMissingStub: null,
  );

  @override
  void clearMessages() => super.noSuchMethod(
    Invocation.method(#clearMessages, []),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<Map<String, dynamic>> getApiUsageInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getApiUsageInfo, []),
            returnValue: _i8.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i8.Future<Map<String, dynamic>>);

  @override
  _i8.Future<String> getUsageStatusMessage() =>
      (super.noSuchMethod(
            Invocation.method(#getUsageStatusMessage, []),
            returnValue: _i8.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#getUsageStatusMessage, []),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
